{"version":3,"sources":["Statistics/Statistics.module.css","Sections/Section.module.css","Feedback/Feedback.module.css","Notifications/Notifications.module.css","Sections/Section.jsx","Notifications/Notifications.jsx","Feedback/Feedback.jsx","Statistics/Statistics.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","container","Notification","message","text","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","btn","Statistics","good","neutral","bad","total","positivePercentage","list","item","App","useState","feedback","setFeedback","countTotalFeedback","totalCount","Math","round","countPositiveFeedbackPercentage","Object","keys","Feedback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,oBCAzDD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,UAAY,4BAA4B,IAAM,wB,iBCAhED,EAAOC,QAAU,CAAC,KAAO,8B,qJCeVC,MAbd,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,sBAAKC,UAAYC,IAAEC,UAAnB,UACE,oBAAIF,UAAaC,IAAEH,MAAnB,SAA4BA,IAC3BC,M,gBCMSI,MAXhB,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mBAAGJ,UAAYC,IAAEI,KAAjB,SACKD,K,gBCmBEE,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAE5B,OACI,qBAAKR,UAAaC,IAAEC,UAApB,SACKK,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAqBC,KAAK,SACxBC,QAAS,kBAAMJ,EAAgBE,IAC/BV,UAAWC,IAAEY,IAFf,SAGDH,GAHcA,S,gBCiChBI,MArCf,YAAoE,IAA/CC,EAA8C,EAA9CA,KAAKC,EAAyC,EAAzCA,QAAQC,EAAiC,EAAjCA,IAAIC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,mBACxC,OACI,8BACI,qBAAInB,UAAYC,IAAEmB,KAAlB,UACI,qBAAIpB,UAAYC,IAAEoB,KAAlB,UACI,yCACCN,KAEL,qBAAIf,UAAYC,IAAEoB,KAAlB,UACI,4CACCL,KAEL,qBAAIhB,UAAYC,IAAEoB,KAAlB,UACI,wCACCJ,KAEJ,qBAAIjB,UAAYC,IAAEoB,KAAlB,UACG,0CACCH,KAEJ,qBAAIlB,UAAYC,IAAEoB,KAAlB,UACG,sDACCF,EAFJ,cCfF,SAASG,IACtB,IAKA,EAAgCC,mBALX,CACnBR,KAAM,EACNE,IAAK,EACLD,QAAU,IAEZ,mBAAOQ,EAAP,KAAiBC,EAAjB,KACQV,EAAuBS,EAAvBT,KAAMC,EAAiBQ,EAAjBR,QAASC,EAAQO,EAARP,IAEjBS,EAAqB,kBAAMX,EAAOC,EAAUC,GAe5CC,EAAQQ,IACRP,EAdkC,WACtC,IAAMQ,EAAaD,IAEnB,OAAOE,KAAKC,MAAuB,IAAhBL,EAAST,KAAcY,GAWjBG,GAErBvB,EAAUwB,OAAOC,KAAKR,GAC3B,OACG,gCACE,cAAC,EAAD,CAAS1B,MAAO,wBAAhB,SACE,cAACmC,EAAD,CACE1B,QAASA,EACTC,gBAhBc,SAACG,GACvBc,EAAY,2BACPD,GADM,kBAERb,EAAOa,EAASb,GAAQ,UAiBtBO,EAAQ,EACP,cAAC,EAAD,CAASpB,MAAO,aAAhB,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC,EAAD,CAAcf,QAAS,yBCrDjC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.76e11443.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3orGr\",\"item\":\"Statistics_item__3_0aW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__18zUR\",\"title\":\"Section_title__2x444\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__3lgRq\",\"btn\":\"Feedback_btn__2Nmml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notifications_text__ccHEB\"};","import PropTypes from 'prop-types';\r\n import s from './Section.module.css'\r\n\r\n function Section({ title, children }) {\r\n  return (\r\n    <div className= {s.container}>\r\n      <h2 className = {s.title} >{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section","import s from './Notifications.module.css'\r\nimport PropTypes from 'prop-types';\r\nfunction Notification({ message }) {\r\n    return (\r\n        <p className ={s.text}>\r\n            {message}\r\n       </p>\r\n   )  \r\n } \r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n export default Notification","import PropTypes from 'prop-types'\r\nimport s from './Feedback.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  \r\n        return (\r\n            <div className = {s.container}>\r\n                {options.map(option=>(\r\n                  <button key={option} type='button'\r\n                    onClick={() => onLeaveFeedback(option)}\r\n                    className={s.btn}>\r\n                {option}\r\n                </button>\r\n              ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css'\r\n\r\n\r\nfunction Statistics({good,neutral,bad,total,positivePercentage, }) {\r\n    return (\r\n        <div>\r\n            <ul className ={s.list}>\r\n                <li className= {s.item}>\r\n                    <span>Good:</span>\r\n                    {good}\r\n                </li>\r\n                <li className= {s.item}>\r\n                    <span>Neutral:</span>\r\n                    {neutral}\r\n                </li>\r\n                <li className= {s.item}>\r\n                    <span>Bad:</span>\r\n                    {bad}\r\n                </li>\r\n                 <li className= {s.item}>\r\n                    <span>Total:</span>\r\n                    {total}\r\n                </li>\r\n                 <li className= {s.item}>\r\n                    <span>Positive feedback:</span>\r\n                    {positivePercentage} %\r\n                </li>\r\n            </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics","\r\nimport './App.css';\r\nimport { useState } from 'react';\r\nimport Section from './Sections';\r\nimport Notification from './Notifications';\r\nimport FeedbackOptions from './Feedback';\r\nimport Statistics from './Statistics';\r\n\r\n\r\nexport default function App() {\r\n  const initialState = {\r\n    good: 0,\r\n    bad: 0,\r\n    neutral : 0,\r\n  }\r\n  const [feedback, setFeedback] = useState(initialState);\r\n  const { good, neutral, bad } = feedback;\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const totalCount = countTotalFeedback();\r\n\r\n    return Math.round((feedback.good * 100) / totalCount);\r\n  };\r\n\r\n  const onLeaveFeedback = (type) => {\r\n    setFeedback({\r\n      ...feedback,\r\n      [type]: feedback[type] + 1,\r\n    });\r\n  };\r\n\r\n  const total = countTotalFeedback();\r\n  const positivePercentage = countPositiveFeedbackPercentage();\r\n\r\n  const options = Object.keys(feedback);\r\n   return (\r\n      <div>\r\n        <Section title={'Please leave feedback'}>\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n\r\n        {total > 0 ? (\r\n          <Section title={'Statistics'}>\r\n            <Statistics\r\n              good={good}\r\n              bad={bad}\r\n              neutral={neutral}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            ></Statistics>\r\n          </Section>\r\n        ) : (\r\n          <Notification message={'No feedback given'} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [good, setGood] = useState(0);\r\n//   const [bad, setBad] = useState(0);\r\n//   const [neutral, setNeutral] = useState(0);\r\n\r\n  \r\n\r\n//   // increment = value => () => {\r\n//   //   this.setState(prevState => ({\r\n//   //     [value]: prevState[value] + 1,\r\n//   //   }));\r\n//   // };\r\n \r\n//   ;\r\n//     const totalFeedback = good + bad + neutral;\r\n//     const positiveFeedbackPercentage = Math.round((good / totalFeedback) * 100);\r\n//     const options = Object.keys(this.state);\r\n  //   return (\r\n  //     <div>\r\n  //       <Section title={'Please leave feedback'}>\r\n  //         <FeedbackOptions\r\n  //           options={options}\r\n  //           onLeaveFeedback={this.increment}\r\n  //         ></FeedbackOptions>\r\n  //       </Section>\r\n\r\n  //       {totalFeedback > 0 ? (\r\n  //         <Section title={'Statistics'}>\r\n  //           <Statistics\r\n  //             good={good}\r\n  //             bad={bad}\r\n  //             neutral={neutral}\r\n  //             total={totalFeedback}\r\n  //             positivePercentage={positiveFeedbackPercentage}\r\n  //           ></Statistics>\r\n  //         </Section>\r\n  //       ) : (\r\n  //         <Notification message={'No feedback given'} />\r\n  //       )}\r\n  //     </div>\r\n  //   );\r\n  // }\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}